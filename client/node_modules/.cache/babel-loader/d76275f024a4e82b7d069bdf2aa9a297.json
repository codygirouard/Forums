{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cag0398\\\\Desktop\\\\forums\\\\client\\\\src\\\\Posts.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Header from './header';\nimport { dateToString } from './postDate';\nimport { LikeButton } from './like';\nimport Alert from './alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewPostButton = () => {\n  _s();\n\n  const nav = useNavigate();\n\n  const handleClick = () => {\n    if (localStorage.getItem('name')) {\n      nav('/newPost');\n    } else {\n      // user not logged in, cannot make new posts\n      const alertModal = document.getElementById('alertModal');\n      const alertText = document.getElementById('alertText');\n      alertText.innerHTML = 'You need to login to make new posts!';\n      alertModal.style.display = 'block';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"newPostButton\",\n    onClick: handleClick,\n    children: \"+\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewPostButton, \"1lJpW1ZyBjjoZdLGgRu75VwkrM8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = NewPostButton;\n\nconst Post = ({\n  id,\n  author,\n  title,\n  commentCount,\n  likes,\n  usersLiked,\n  date\n}) => {\n  const dateString = dateToString(date);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(LikeButton, {\n      totalLikes: likes,\n      usersLiked: usersLiked,\n      postId: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `post/${id}`,\n      className: \"commentLink\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postContents\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"postTitle\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"postAuthor\",\n          children: `Posted by ${author} ${dateString}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"postComments\",\n          children: `${commentCount} comments`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Post;\n\nconst Posts = ({\n  pageNum\n}) => {\n  _s2();\n\n  const [data, setData] = useState(null); // load 15 most recent posts on start\n\n  useEffect(() => {\n    fetch(`http://localhost:5000/be/getPosts/${pageNum}`).then(response => response.json()).then(posts => {\n      if (!posts.err) {\n        setData(d => {\n          if (d) {\n            return [...d, ...posts];\n          } else {\n            return posts;\n          }\n        });\n      }\n    });\n  }, [pageNum]);\n\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this);\n  } else {\n    return data.map(({\n      _id,\n      author,\n      title,\n      commentCount,\n      likes,\n      usersLiked,\n      date\n    }) => /*#__PURE__*/_jsxDEV(Post, {\n      id: _id,\n      author: author,\n      title: title,\n      commentCount: commentCount,\n      likes: likes,\n      usersLiked: usersLiked,\n      date: date\n    }, _id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this));\n  }\n};\n\n_s2(Posts, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\n_c3 = Posts;\n\nconst Page = () => {\n  _s3();\n\n  const [currPage, setCurrPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  let timeout = null;\n\n  const nextPage = () => {\n    setCurrPage(currPage + 1);\n  };\n\n  const handleScroll = () => {\n    if (window.innerHeight + window.pageYOffset >= document.body.offsetHeight - 2 && !loading) {\n      setLoading(true);\n      nextPage();\n      timeout = setTimeout(() => {\n        setLoading(false);\n      }, 500);\n    }\n  };\n\n  useEffect(() => {\n    document.title = 'Home - Denton Forums';\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('scroll', handleScroll);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: /*#__PURE__*/_jsxDEV(Posts, {\n      pageNum: currPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(Page, \"w301rb8c6Ut2EEAeu/2snxOFjgI=\");\n\n_c4 = Page;\nexport const Feed = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      scroll: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Page, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewPostButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c5 = Feed;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"NewPostButton\");\n$RefreshReg$(_c2, \"Post\");\n$RefreshReg$(_c3, \"Posts\");\n$RefreshReg$(_c4, \"Page\");\n$RefreshReg$(_c5, \"Feed\");","map":{"version":3,"sources":["C:/Users/cag0398/Desktop/forums/client/src/Posts.js"],"names":["useEffect","useState","Link","useNavigate","Header","dateToString","LikeButton","Alert","NewPostButton","nav","handleClick","localStorage","getItem","alertModal","document","getElementById","alertText","innerHTML","style","display","Post","id","author","title","commentCount","likes","usersLiked","date","dateString","Posts","pageNum","data","setData","fetch","then","response","json","posts","err","d","map","_id","Page","currPage","setCurrPage","loading","setLoading","timeout","nextPage","handleScroll","window","innerHeight","pageYOffset","body","offsetHeight","setTimeout","addEventListener","clearTimeout","removeEventListener","Feed"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAMC,GAAG,GAAGN,WAAW,EAAvB;;AACA,QAAMO,WAAW,GAAG,MAAM;AACxB,QAAIC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAJ,EAAkC;AAChCH,MAAAA,GAAG,CAAC,UAAD,CAAH;AACD,KAFD,MAEO;AACL;AACA,YAAMI,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAnB;AACA,YAAMC,SAAS,GAAGF,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAlB;AACAC,MAAAA,SAAS,CAACC,SAAV,GAAsB,sCAAtB;AACAJ,MAAAA,UAAU,CAACK,KAAX,CAAiBC,OAAjB,GAA2B,OAA3B;AACD;AACF,GAVD;;AAWA,sBACE;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAkC,IAAA,OAAO,EAAET,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAlBD;;GAAMF,a;UACQL,W;;;KADRK,a;;AAoBN,MAAMY,IAAI,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,MAAN;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA,YAArB;AAAmCC,EAAAA,KAAnC;AAA0CC,EAAAA,UAA1C;AAAsDC,EAAAA;AAAtD,CAAD,KAAkE;AAC7E,QAAMC,UAAU,GAAGvB,YAAY,CAACsB,IAAD,CAA/B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,UAAU,EAAEF,KAAxB;AAA+B,MAAA,UAAU,EAAEC,UAA3C;AAAuD,MAAA,MAAM,EAAEL;AAA/D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,QAAOA,EAAG,EAArB;AAAwB,MAAA,SAAS,EAAC,aAAlC;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA,oBAA2BE;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAA6B,aAAYD,MAAO,IAAGM,UAAW;AAA9D;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAG,UAAA,SAAS,EAAC,cAAb;AAAA,oBAA8B,GAAEJ,YAAa;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAfD;;MAAMJ,I;;AAiBN,MAAMS,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB/B,QAAQ,CAAC,IAAD,CAAhC,CAD6B,CAG7B;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdiC,IAAAA,KAAK,CAAE,qCAAoCH,OAAQ,EAA9C,CAAL,CACGI,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,KAAD,IAAW;AACf,UAAI,CAACA,KAAK,CAACC,GAAX,EAAgB;AACdN,QAAAA,OAAO,CAAEO,CAAD,IAAO;AACb,cAAIA,CAAJ,EAAO;AACL,mBAAO,CAAC,GAAGA,CAAJ,EAAO,GAAGF,KAAV,CAAP;AACD,WAFD,MAEO;AACL,mBAAOA,KAAP;AACD;AACF,SANM,CAAP;AAOD;AACF,KAZH;AAaD,GAdQ,EAcN,CAACP,OAAD,CAdM,CAAT;;AAgBA,MAAI,CAACC,IAAL,EAAW;AACT,wBAAO;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO;AACL,WAAOA,IAAI,CAACS,GAAL,CACL,CAAC;AAAEC,MAAAA,GAAF;AAAOnB,MAAAA,MAAP;AAAeC,MAAAA,KAAf;AAAsBC,MAAAA,YAAtB;AAAoCC,MAAAA,KAApC;AAA2CC,MAAAA,UAA3C;AAAuDC,MAAAA;AAAvD,KAAD,kBACE,QAAC,IAAD;AAEE,MAAA,EAAE,EAAEc,GAFN;AAGE,MAAA,MAAM,EAAEnB,MAHV;AAIE,MAAA,KAAK,EAAEC,KAJT;AAKE,MAAA,YAAY,EAAEC,YALhB;AAME,MAAA,KAAK,EAAEC,KANT;AAOE,MAAA,UAAU,EAAEC,UAPd;AAQE,MAAA,IAAI,EAAEC;AARR,OACOc,GADP;AAAA;AAAA;AAAA;AAAA,YAFG,CAAP;AAcD;AACF,CAtCD;;IAAMZ,K;;MAAAA,K;;AAwCN,MAAMa,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B3C,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAAC4C,OAAD,EAAUC,UAAV,IAAwB7C,QAAQ,CAAC,KAAD,CAAtC;AACA,MAAI8C,OAAO,GAAG,IAAd;;AAEA,QAAMC,QAAQ,GAAG,MAAM;AACrBJ,IAAAA,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAX;AACD,GAFD;;AAIA,QAAMM,YAAY,GAAG,MAAM;AACzB,QACEC,MAAM,CAACC,WAAP,GAAqBD,MAAM,CAACE,WAA5B,IACEtC,QAAQ,CAACuC,IAAT,CAAcC,YAAd,GAA6B,CAD/B,IAEA,CAACT,OAHH,EAIE;AACAC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,QAAQ;AACRD,MAAAA,OAAO,GAAGQ,UAAU,CAAC,MAAM;AACzBT,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAFmB,EAEjB,GAFiB,CAApB;AAGD;AACF,GAZD;;AAcA9C,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ,CAACS,KAAT,GAAiB,sBAAjB;AACA2B,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCP,YAAlC;AAEA,WAAO,MAAM;AACXQ,MAAAA,YAAY,CAACV,OAAD,CAAZ;AACAG,MAAAA,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCT,YAArC;AACD,KAHD;AAID,GARQ,CAAT;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEN;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAtCD;;IAAMD,I;;MAAAA,I;AAwCN,OAAO,MAAMiB,IAAI,GAAG,MAAM;AACxB,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAQD,CATM;MAAMA,I","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Header from './header';\r\nimport { dateToString } from './postDate';\r\nimport { LikeButton } from './like';\r\nimport Alert from './alert';\r\n\r\nconst NewPostButton = () => {\r\n  const nav = useNavigate();\r\n  const handleClick = () => {\r\n    if (localStorage.getItem('name')) {\r\n      nav('/newPost');\r\n    } else {\r\n      // user not logged in, cannot make new posts\r\n      const alertModal = document.getElementById('alertModal');\r\n      const alertText = document.getElementById('alertText');\r\n      alertText.innerHTML = 'You need to login to make new posts!';\r\n      alertModal.style.display = 'block';\r\n    }\r\n  };\r\n  return (\r\n    <button className=\"newPostButton\" onClick={handleClick}>\r\n      +\r\n    </button>\r\n  );\r\n};\r\n\r\nconst Post = ({ id, author, title, commentCount, likes, usersLiked, date }) => {\r\n  const dateString = dateToString(date);\r\n\r\n  return (\r\n    <div className=\"post\">\r\n      <LikeButton totalLikes={likes} usersLiked={usersLiked} postId={id} />\r\n      <Link to={`post/${id}`} className=\"commentLink\">\r\n        <div className=\"postContents\">\r\n          <h3 className=\"postTitle\">{title}</h3>\r\n          <h4 className=\"postAuthor\">{`Posted by ${author} ${dateString}`}</h4>\r\n          <p className=\"postComments\">{`${commentCount} comments`}</p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Posts = ({ pageNum }) => {\r\n  const [data, setData] = useState(null);\r\n\r\n  // load 15 most recent posts on start\r\n  useEffect(() => {\r\n    fetch(`http://localhost:5000/be/getPosts/${pageNum}`)\r\n      .then((response) => response.json())\r\n      .then((posts) => {\r\n        if (!posts.err) {\r\n          setData((d) => {\r\n            if (d) {\r\n              return [...d, ...posts];\r\n            } else {\r\n              return posts;\r\n            }\r\n          });\r\n        }\r\n      });\r\n  }, [pageNum]);\r\n\r\n  if (!data) {\r\n    return <div className=\"loader\"></div>;\r\n  } else {\r\n    return data.map(\r\n      ({ _id, author, title, commentCount, likes, usersLiked, date }) => (\r\n        <Post\r\n          key={_id}\r\n          id={_id}\r\n          author={author}\r\n          title={title}\r\n          commentCount={commentCount}\r\n          likes={likes}\r\n          usersLiked={usersLiked}\r\n          date={date}\r\n        />\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\nconst Page = () => {\r\n  const [currPage, setCurrPage] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n  let timeout = null;\r\n\r\n  const nextPage = () => {\r\n    setCurrPage(currPage + 1);\r\n  };\r\n\r\n  const handleScroll = () => {\r\n    if (\r\n      window.innerHeight + window.pageYOffset >=\r\n        document.body.offsetHeight - 2 &&\r\n      !loading\r\n    ) {\r\n      setLoading(true);\r\n      nextPage();\r\n      timeout = setTimeout(() => {\r\n        setLoading(false);\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = 'Home - Denton Forums';\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => {\r\n      clearTimeout(timeout);\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"posts\">\r\n      <Posts pageNum={currPage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Feed = () => {\r\n  return (\r\n    <>\r\n      <Header scroll={true} />\r\n      <Page />\r\n      <NewPostButton />\r\n      <Alert />\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}