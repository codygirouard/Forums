{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cag0398\\\\Desktop\\\\forums\\\\client\\\\src\\\\Post.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useReducer, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Header } from './Header';\nimport { dateToString } from './postDate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Reply = ({\n  reply\n}) => {\n  const {\n    author,\n    body,\n    date\n  } = reply;\n  const time = dateToString(date);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reply\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"authorTime\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"time\",\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"bodyText\",\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Reply;\n\nconst Replies = ({\n  replies\n}) => {\n  replies = replies.reverse();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"replies\",\n    children: replies.map(reply => {\n      return /*#__PURE__*/_jsxDEV(Reply, {\n        reply: reply\n      }, reply._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Replies;\n\nconst Comment = ({\n  postId,\n  commentId,\n  comment\n}) => {\n  _s();\n\n  const {\n    author,\n    body,\n    replies,\n    date\n  } = comment;\n  const time = dateToString(date);\n  const [hideCommentBox, toggleHideCommentBox] = useReducer(hideCommentBox => {\n    return !hideCommentBox;\n  }, true);\n\n  const handleClick = () => {\n    toggleHideCommentBox();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"authorTime\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"time\",\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"bodyText\",\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"replyButton\",\n      onClick: handleClick,\n      children: \"Reply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      style: {\n        display: hideCommentBox ? 'none' : 'block'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"commentBox\",\n        \"aria-label\": \"Comment Box\",\n        rows: \"1\",\n        cols: \"1\",\n        name: \"text\",\n        defaultValue: \"Type reply here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submitButton\",\n        children: \"Submit Reply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Replies, {\n      replies: replies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comment, \"MgAezypHxhmhsar1TGR75vh4l4o=\");\n\n_c3 = Comment;\n\nconst Comments = ({\n  id,\n  comments\n}) => {\n  comments = comments.reverse();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: comments.map(comment => {\n      return /*#__PURE__*/_jsxDEV(Comment, {\n        postId: id,\n        commentId: comment._id,\n        comment: comment\n      }, comment._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Comments;\n\nconst Content = ({\n  likes,\n  author,\n  body,\n  title,\n  date\n}) => {\n  const time = dateToString(date);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"far fa-thumbs-up likes\",\n      children: ` ${likes}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contentPost\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"authorTime\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"time\",\n          children: time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"bodyText\",\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = Content;\nexport const Post = () => {\n  _s2();\n\n  const {\n    id\n  } = useParams();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetch(`http://localhost:3001/be/getPost/${id}`).then(response => response.json()).then(setData);\n  }, [id]);\n\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    const {\n      _id,\n      likes,\n      author,\n      body,\n      title,\n      date,\n      comments\n    } = data;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        scroll: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postContainer\",\n        children: [/*#__PURE__*/_jsxDEV(Content, {\n          likes: likes,\n          author: author,\n          body: body,\n          title: title,\n          date: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"commentBox\",\n            \"aria-label\": \"Comment Box\",\n            rows: \"1\",\n            cols: \"1\",\n            name: \"text\",\n            defaultValue: \"Type comment here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submitButton\",\n            children: \"Submit Reply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Comments, {\n          id: _id,\n          comments: comments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s2(Post, \"bKWtrFi4rDiB0nUS9DgR6D7F0mg=\", false, function () {\n  return [useParams];\n});\n\n_c6 = Post;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Reply\");\n$RefreshReg$(_c2, \"Replies\");\n$RefreshReg$(_c3, \"Comment\");\n$RefreshReg$(_c4, \"Comments\");\n$RefreshReg$(_c5, \"Content\");\n$RefreshReg$(_c6, \"Post\");","map":{"version":3,"sources":["C:/Users/cag0398/Desktop/forums/client/src/Post.js"],"names":["useEffect","useReducer","useState","useParams","Header","dateToString","Reply","reply","author","body","date","time","Replies","replies","reverse","map","_id","Comment","postId","commentId","comment","hideCommentBox","toggleHideCommentBox","handleClick","display","Comments","id","comments","Content","likes","title","Post","data","setData","fetch","then","response","json"],"mappings":"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","sourcesContent":["import { useEffect, useReducer, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Header } from './Header';\r\nimport { dateToString } from './postDate';\r\n\r\nconst Reply = ({ reply }) => {\r\n  const { author, body, date } = reply;\r\n\r\n  const time = dateToString(date);\r\n\r\n  return (\r\n    <div className=\"reply\">\r\n      <div className=\"authorTime\">\r\n        <h5>{author}</h5>\r\n        <p className=\"time\">{time}</p>\r\n      </div>\r\n\r\n      <p className=\"bodyText\">{body}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Replies = ({ replies }) => {\r\n  replies = replies.reverse();\r\n  return (\r\n    <div className=\"replies\">\r\n      {replies.map((reply) => {\r\n        return <Reply key={reply._id} reply={reply} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Comment = ({ postId, commentId, comment }) => {\r\n  const { author, body, replies, date } = comment;\r\n  const time = dateToString(date);\r\n\r\n  const [hideCommentBox, toggleHideCommentBox] = useReducer(\r\n    (hideCommentBox) => {\r\n      return !hideCommentBox;\r\n    },\r\n    true\r\n  );\r\n\r\n  const handleClick = () => {\r\n    toggleHideCommentBox();\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment\">\r\n      <div className=\"authorTime\">\r\n        <h5>{author}</h5>\r\n        <p className=\"time\">{time}</p>\r\n      </div>\r\n      <p className=\"bodyText\">{body}</p>\r\n      <button className=\"replyButton\" onClick={handleClick}>\r\n        Reply\r\n      </button>\r\n      <div\r\n        className=\"comment\"\r\n        style={{ display: hideCommentBox ? 'none' : 'block' }}\r\n      >\r\n        <textarea\r\n          className=\"commentBox\"\r\n          aria-label=\"Comment Box\"\r\n          rows=\"1\"\r\n          cols=\"1\"\r\n          name=\"text\"\r\n          defaultValue=\"Type reply here...\"\r\n        ></textarea>\r\n        <button className=\"submitButton\">Submit Reply</button>\r\n      </div>\r\n      <Replies replies={replies} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Comments = ({ id, comments }) => {\r\n  comments = comments.reverse();\r\n  return (\r\n    <div className=\"comments\">\r\n      {comments.map((comment) => {\r\n        return (\r\n          <Comment\r\n            key={comment._id}\r\n            postId={id}\r\n            commentId={comment._id}\r\n            comment={comment}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Content = ({ likes, author, body, title, date }) => {\r\n  const time = dateToString(date);\r\n  return (\r\n    <div className=\"content\">\r\n      <i className=\"far fa-thumbs-up likes\">{` ${likes}`}</i>\r\n      <div className=\"contentPost\">\r\n        <h3>{title}</h3>\r\n        <div className=\"authorTime\">\r\n          <h5>{author}</h5>\r\n          <p className=\"time\">{time}</p>\r\n        </div>\r\n        <p className=\"bodyText\">{body}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Post = () => {\r\n  const { id } = useParams();\r\n\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:3001/be/getPost/${id}`)\r\n      .then((response) => response.json())\r\n      .then(setData);\r\n  }, [id]);\r\n\r\n  if (!data) {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <div className=\"loader\"></div>\r\n      </>\r\n    );\r\n  } else {\r\n    const { _id, likes, author, body, title, date, comments } = data;\r\n    return (\r\n      <>\r\n        <Header scroll={true} />\r\n        <div className=\"postContainer\">\r\n          <Content\r\n            likes={likes}\r\n            author={author}\r\n            body={body}\r\n            title={title}\r\n            date={date}\r\n          />\r\n          <div className=\"comment\">\r\n            <textarea\r\n              className=\"commentBox\"\r\n              aria-label=\"Comment Box\"\r\n              rows=\"1\"\r\n              cols=\"1\"\r\n              name=\"text\"\r\n              defaultValue=\"Type comment here...\"\r\n            ></textarea>\r\n            <button className=\"submitButton\">Submit Reply</button>\r\n          </div>\r\n          <Comments id={_id} comments={comments} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}