{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cag0398\\\\Desktop\\\\forums\\\\client\\\\src\\\\Post.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Header } from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Reply = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reply\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"replier\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Body of a reply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Reply;\n\nconst Replies = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"replies\",\n    children: /*#__PURE__*/_jsxDEV(Reply, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Replies;\n\nconst CommentBox = ({\n  id\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commentBox\",\n    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"1\",\n      cols: \"1\",\n      name: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = CommentBox;\n\nconst Comment = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"commentor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Body of a comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Reply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Replies, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Comment;\n\nconst Comments = ({\n  id,\n  comments\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: comments.map(comment => {\n      console.log(comment);\n      return /*#__PURE__*/_jsxDEV(Comment, {\n        postId: id,\n        comment: comment\n      }, comment._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = Comments;\n\nconst Content = ({\n  id,\n  likes,\n  author,\n  body,\n  title,\n  date\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: `${likes} Likes`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_c6 = Content;\nexport const Post = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetch(`http://localhost:3001/be/getPost/${id}`).then(response => response.json()).then(setData);\n  }, [id]);\n\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    const {\n      _id,\n      likes,\n      author,\n      body,\n      title,\n      date,\n      comments\n    } = data;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        id: _id,\n        likes: likes,\n        author: author,\n        body: body,\n        title: title,\n        date: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentBox, {\n        id: _id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Comments, {\n        id: _id,\n        comments: comments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s(Post, \"bKWtrFi4rDiB0nUS9DgR6D7F0mg=\", false, function () {\n  return [useParams];\n});\n\n_c7 = Post;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Reply\");\n$RefreshReg$(_c2, \"Replies\");\n$RefreshReg$(_c3, \"CommentBox\");\n$RefreshReg$(_c4, \"Comment\");\n$RefreshReg$(_c5, \"Comments\");\n$RefreshReg$(_c6, \"Content\");\n$RefreshReg$(_c7, \"Post\");","map":{"version":3,"sources":["C:/Users/cag0398/Desktop/forums/client/src/Post.js"],"names":["useEffect","useState","useParams","Header","Reply","Replies","CommentBox","id","Comment","Comments","comments","map","comment","console","log","_id","Content","likes","author","body","title","date","Post","data","setData","fetch","then","response","json"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Header } from './Header';\r\n\r\nconst Reply = () => {\r\n  return (\r\n    <div className=\"reply\">\r\n      <h5>replier</h5>\r\n      <p>Body of a reply</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Replies = () => {\r\n  return (\r\n    <div className=\"replies\">\r\n      <Reply />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CommentBox = ({ id }) => {\r\n  return (\r\n    <div className=\"commentBox\">\r\n      <textarea rows=\"1\" cols=\"1\" name=\"text\"></textarea>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Comment = () => {\r\n  return (\r\n    <div className=\"comment\">\r\n      <h5>commentor</h5>\r\n      <p>Body of a comment</p>\r\n      <button>Reply</button>\r\n      <CommentBox />\r\n      <Replies />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Comments = ({ id, comments }) => {\r\n  return (\r\n    <div className=\"comments\">\r\n      {comments.map((comment) => {\r\n        console.log(comment);\r\n        return <Comment key={comment._id} postId={id} comment={comment} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Content = ({ id, likes, author, body, title, date }) => {\r\n  return (\r\n    <div className=\"content\">\r\n      <p>{`${likes} Likes`}</p>\r\n      <h3>{title}</h3>\r\n      <h5>{author}</h5>\r\n      <p>{body}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Post = () => {\r\n  const { id } = useParams();\r\n\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:3001/be/getPost/${id}`)\r\n      .then((response) => response.json())\r\n      .then(setData);\r\n  }, [id]);\r\n\r\n  if (!data) {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <h1>Loading...</h1>\r\n      </>\r\n    );\r\n  } else {\r\n    const { _id, likes, author, body, title, date, comments } = data;\r\n    return (\r\n      <>\r\n        <Header />\r\n\r\n        <Content\r\n          id={_id}\r\n          likes={likes}\r\n          author={author}\r\n          body={body}\r\n          title={title}\r\n          date={date}\r\n        />\r\n        <CommentBox id={_id} />\r\n        <Comments id={_id} comments={comments} />\r\n      </>\r\n    );\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}