{"ast":null,"code":"import _objectSpread from\"C:/Users/cag0398/Desktop/forums/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:/Users/cag0398/Desktop/forums/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/cag0398/Desktop/forums/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/cag0398/Desktop/forums/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useNavigate}from'react-router-dom';import{useForm}from'react-hook-form';import{useEffect,useState}from'react';import Header from'./header';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var NewPost=function NewPost(){var titleErrors={required:'A title is required to make a post',minLength:'Title must be at least 5 characters long',maxLength:'Title must be 40 characters long maximum',err:'Error trying to post, please try again later'};var bodyErrors={required:'Post body is required to make a post',minLength:'Post body must be at least 3 characters long',maxLength:'Post body must be 501 characters long maximum',err:'Error trying to post, please try again later'};var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,errors=_useForm.formState.errors;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),titleError=_useState2[0],setTitleError=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),bodyError=_useState4[0],setBodyError=_useState4[1];var navigate=useNavigate();useEffect(function(){document.title='New Post - Denton Forums';if(!localStorage.getItem('name')){navigate('/');}});var onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var user,postInfo,options,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setTitleError(null);setBodyError(null);user=localStorage.getItem('name');postInfo={author:user,title:data.title,body:data.body};options={method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(postInfo)};_context.next=7;return fetch('http://localhost:3001/be/newPost',options).then(function(response){return response.json();});case 7:res=_context.sent;if(res.succ){navigate('/');}else{setTitleError('err');setBodyError('err');}case 9:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref.apply(this,arguments);};}();var handleInput=function handleInput(_ref2){var target=_ref2.target;target.style.height='';target.style.height=target.scrollHeight+6+'px';};var onErrors=function onErrors(errors){setTitleError(errors.title?errors.title.type:null);setBodyError(errors.body?errors.body.type:null);};return/*#__PURE__*/_jsxs(\"div\",{className:\"centerScreen\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"loginContainer\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"formTitle\",children:\"Make a Post\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(onSubmit,onErrors),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"formGroup\",children:[/*#__PURE__*/_jsx(\"input\",_objectSpread({id:\"title\",className:\"formField\",type:\"text\",placeholder:\"Title\",\"aria-invalid\":errors.title?'true':'false'},register('title',{required:true,minLength:5,maxLength:40}))),/*#__PURE__*/_jsx(\"label\",{className:\"formLabel\",htmlFor:\"title\",children:\"Title\"})]}),titleError&&/*#__PURE__*/_jsx(\"span\",{role:\"alert\",className:\"fieldError\",children:titleErrors[titleError]}),/*#__PURE__*/_jsxs(\"div\",{className:\"formGroup textField\",children:[/*#__PURE__*/_jsx(\"textarea\",_objectSpread({id:\"body\",className:\"formField textField\",type:\"text\",placeholder:\"Body\",maxLength:\"500\",\"aria-invalid\":errors.body?'true':'false',onInput:handleInput},register('body',{required:true,minLength:3,maxLength:500}))),/*#__PURE__*/_jsx(\"label\",{className:\"formLabel textField\",htmlFor:\"body\",children:\"Body\"})]}),bodyError&&/*#__PURE__*/_jsx(\"span\",{role:\"alert\",className:\"fieldError\",children:bodyErrors[bodyError]}),/*#__PURE__*/_jsx(\"div\",{className:\"newPost\",children:/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",className:\"btn\",children:[/*#__PURE__*/_jsxs(\"svg\",{width:\"180px\",height:\"60px\",viewBox:\"0 0 180 60\",className:\"border\",children:[/*#__PURE__*/_jsx(\"polyline\",{points:\"179,1 179,59 1,59 1,1 179,1\",className:\"bg-line\"}),/*#__PURE__*/_jsx(\"polyline\",{points:\"179,1 179,59 1,59 1,1 179,1\",className:\"hl-line\"})]}),/*#__PURE__*/_jsx(\"span\",{children:\"Post\"})]})})]})]})]});};","map":{"version":3,"sources":["C:/Users/cag0398/Desktop/forums/client/src/NewPost.js"],"names":["useNavigate","useForm","useEffect","useState","Header","NewPost","titleErrors","required","minLength","maxLength","err","bodyErrors","register","handleSubmit","errors","formState","titleError","setTitleError","bodyError","setBodyError","navigate","document","title","localStorage","getItem","onSubmit","data","user","postInfo","author","body","options","method","headers","JSON","stringify","fetch","then","response","json","res","succ","handleInput","target","style","height","scrollHeight","onErrors","type"],"mappings":"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","sourcesContent":["import { useNavigate } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useEffect, useState } from 'react';\r\nimport Header from './header';\r\n\r\nexport const NewPost = () => {\r\n  const titleErrors = {\r\n    required: 'A title is required to make a post',\r\n    minLength: 'Title must be at least 5 characters long',\r\n    maxLength: 'Title must be 40 characters long maximum',\r\n    err: 'Error trying to post, please try again later',\r\n  };\r\n  const bodyErrors = {\r\n    required: 'Post body is required to make a post',\r\n    minLength: 'Post body must be at least 3 characters long',\r\n    maxLength: 'Post body must be 501 characters long maximum',\r\n    err: 'Error trying to post, please try again later',\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const [titleError, setTitleError] = useState(null);\r\n  const [bodyError, setBodyError] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    document.title = 'New Post - Denton Forums';\r\n    if (!localStorage.getItem('name')) {\r\n      navigate('/');\r\n    }\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    setTitleError(null);\r\n    setBodyError(null);\r\n    const user = localStorage.getItem('name');\r\n\r\n    const postInfo = {\r\n      author: user,\r\n      title: data.title,\r\n      body: data.body,\r\n    };\r\n\r\n    const options = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(postInfo),\r\n    };\r\n    const res = await fetch('http://localhost:3001/be/newPost', options).then(\r\n      (response) => response.json()\r\n    );\r\n\r\n    if (res.succ) {\r\n      navigate('/');\r\n    } else {\r\n      setTitleError('err');\r\n      setBodyError('err');\r\n    }\r\n  };\r\n\r\n  const handleInput = ({ target }) => {\r\n    target.style.height = '';\r\n    target.style.height = target.scrollHeight + 6 + 'px';\r\n  };\r\n\r\n  const onErrors = (errors) => {\r\n    setTitleError(errors.title ? errors.title.type : null);\r\n    setBodyError(errors.body ? errors.body.type : null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"centerScreen\">\r\n      <Header />\r\n      <div className=\"loginContainer\">\r\n        <h2 className=\"formTitle\">Make a Post</h2>\r\n        <form onSubmit={handleSubmit(onSubmit, onErrors)}>\r\n          <div className=\"formGroup\">\r\n            <input\r\n              id=\"title\"\r\n              className=\"formField\"\r\n              type=\"text\"\r\n              placeholder=\"Title\"\r\n              aria-invalid={errors.title ? 'true' : 'false'}\r\n              {...register('title', {\r\n                required: true,\r\n                minLength: 5,\r\n                maxLength: 40,\r\n              })}\r\n            />\r\n            <label className=\"formLabel\" htmlFor=\"title\">\r\n              Title\r\n            </label>\r\n          </div>\r\n\r\n          {titleError && (\r\n            <span role=\"alert\" className=\"fieldError\">\r\n              {titleErrors[titleError]}\r\n            </span>\r\n          )}\r\n\r\n          <div className=\"formGroup textField\">\r\n            <textarea\r\n              id=\"body\"\r\n              className=\"formField textField\"\r\n              type=\"text\"\r\n              placeholder=\"Body\"\r\n              maxLength=\"500\"\r\n              aria-invalid={errors.body ? 'true' : 'false'}\r\n              onInput={handleInput}\r\n              {...register('body', {\r\n                required: true,\r\n                minLength: 3,\r\n                maxLength: 500,\r\n              })}\r\n            />\r\n            <label className=\"formLabel textField\" htmlFor=\"body\">\r\n              Body\r\n            </label>\r\n          </div>\r\n\r\n          {bodyError && (\r\n            <span role=\"alert\" className=\"fieldError\">\r\n              {bodyErrors[bodyError]}\r\n            </span>\r\n          )}\r\n\r\n          <div className=\"newPost\">\r\n            <button type=\"submit\" className=\"btn\">\r\n              <svg\r\n                width=\"180px\"\r\n                height=\"60px\"\r\n                viewBox=\"0 0 180 60\"\r\n                className=\"border\"\r\n              >\r\n                <polyline\r\n                  points=\"179,1 179,59 1,59 1,1 179,1\"\r\n                  className=\"bg-line\"\r\n                />\r\n                <polyline\r\n                  points=\"179,1 179,59 1,59 1,1 179,1\"\r\n                  className=\"hl-line\"\r\n                />\r\n              </svg>\r\n              <span>Post</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}