{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cag0398\\\\Desktop\\\\forums\\\\client\\\\src\\\\NewPost.js\",\n    _s = $RefreshSig$();\n\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { useEffect, useState } from 'react';\nimport { Header } from './header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NewPost = () => {\n  _s();\n\n  const titleErrors = {\n    required: 'A title is required to make a post',\n    minLength: 'Title must be at least 5 characters long',\n    maxLength: 'Title must be 40 characters long maximum',\n    err: 'Error trying to post, please try again later'\n  };\n  const bodyErrors = {\n    required: 'Post body is required to register',\n    minLength: 'Post body must be at least 3 characters long',\n    maxLength: 'Post body must be 501 characters long maximum',\n    err: 'Error trying to post, please try again later'\n  };\n  const {\n    post,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [titleError, setTitleError] = useState(null);\n  const [bodyError, setBodyError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!localStorage.getItem('name')) {\n      navigate('/');\n    }\n  });\n\n  const onSubmit = async data => {\n    setTitleError(null);\n    setBodyError(null);\n    const user = localStorage.getItem('name');\n    const postInfo = {\n      author: user,\n      title: data.title,\n      body: data.body\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(postInfo)\n    };\n    const res = await fetch('http://localhost:3001/be/newPost', options).then(response => response.json());\n\n    if (res.succ) {\n      navigate('/');\n    } else {\n      setTitleError('err');\n      setBodyError('err');\n    }\n  };\n\n  const onErrors = errors => {\n    setUserError(errors.username ? errors.username.type : null);\n    setEmailError(errors.email ? errors.email.type : null);\n    setPassError(errors.password ? errors.password.type : null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"centerScreen\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"formTitle\",\n        children: \"Create An Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit, onErrors),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            className: \"formField\",\n            type: \"text\",\n            placeholder: \"Username\",\n            \"aria-invalid\": errors.username ? 'true' : 'false',\n            ...register('username', {\n              required: true,\n              minLength: 3,\n              maxLength: 10,\n              pattern: /^[a-z0-9]+$/i\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"formLabel\",\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), userError && /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"alert\",\n          className: \"fieldError\",\n          children: userErrors[userError]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            className: \"formField\",\n            type: \"email\",\n            placeholder: \"Email\",\n            \"aria-invalid\": errors.email ? 'true' : 'false',\n            ...register('email', {\n              required: true,\n              maxLength: 30,\n              pattern: /\\S+@\\S+\\.\\S+/\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"formLabel\",\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), emailError && /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"alert\",\n          className: \"fieldError\",\n          children: emailErrors[emailError]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            className: \"formField\",\n            type: \"password\",\n            placeholder: \"Password\",\n            \"aria-invalid\": errors.password ? 'true' : 'false',\n            ...register('password', {\n              required: true,\n              minLength: 6,\n              maxLength: 24\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"formLabel\",\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), passError && /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"alert\",\n          className: \"fieldError\",\n          children: passErrors[passError]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"180px\",\n              height: \"60px\",\n              viewBox: \"0 0 180 60\",\n              className: \"border\",\n              children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n                points: \"179,1 179,59 1,59 1,1 179,1\",\n                className: \"bg-line\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                points: \"179,1 179,59 1,59 1,1 179,1\",\n                className: \"hl-line\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewPost, \"1Vy350CLYSu2cSKRowYnY5mXXT8=\", false, function () {\n  return [useForm, useNavigate];\n});\n\n_c = NewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"sources":["C:/Users/cag0398/Desktop/forums/client/src/NewPost.js"],"names":["Link","useNavigate","useForm","useEffect","useState","Header","NewPost","titleErrors","required","minLength","maxLength","err","bodyErrors","post","handleSubmit","formState","errors","titleError","setTitleError","bodyError","setBodyError","navigate","localStorage","getItem","onSubmit","data","user","postInfo","author","title","body","options","method","headers","JSON","stringify","res","fetch","then","response","json","succ","onErrors","setUserError","username","type","setEmailError","email","setPassError","password","register","pattern","userError","userErrors","emailError","emailErrors","passError","passErrors"],"mappings":"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","sourcesContent":["import { Link, useNavigate } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useEffect, useState } from 'react';\r\nimport { Header } from './header';\r\n\r\nexport const NewPost = () => {\r\n  const titleErrors = {\r\n    required: 'A title is required to make a post',\r\n    minLength: 'Title must be at least 5 characters long',\r\n    maxLength: 'Title must be 40 characters long maximum',\r\n    err: 'Error trying to post, please try again later',\r\n  };\r\n  const bodyErrors = {\r\n    required: 'Post body is required to register',\r\n    minLength: 'Post body must be at least 3 characters long',\r\n    maxLength: 'Post body must be 501 characters long maximum',\r\n    err: 'Error trying to post, please try again later',\r\n  };\r\n\r\n  const {\r\n    post,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const [titleError, setTitleError] = useState(null);\r\n  const [bodyError, setBodyError] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem('name')) {\r\n      navigate('/');\r\n    }\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    setTitleError(null);\r\n    setBodyError(null);\r\n    const user = localStorage.getItem('name');\r\n\r\n    const postInfo = {\r\n      author: user,\r\n      title: data.title,\r\n      body: data.body,\r\n    };\r\n\r\n    const options = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(postInfo),\r\n    };\r\n    const res = await fetch('http://localhost:3001/be/newPost', options).then(\r\n      (response) => response.json()\r\n    );\r\n\r\n    if (res.succ) {\r\n      navigate('/');\r\n    } else {\r\n      setTitleError('err');\r\n      setBodyError('err');\r\n    }\r\n  };\r\n\r\n  const onErrors = (errors) => {\r\n    setUserError(errors.username ? errors.username.type : null);\r\n    setEmailError(errors.email ? errors.email.type : null);\r\n    setPassError(errors.password ? errors.password.type : null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"centerScreen\">\r\n      <Header />\r\n      <div className=\"loginContainer\">\r\n        <h2 className=\"formTitle\">Create An Account</h2>\r\n        <form onSubmit={handleSubmit(onSubmit, onErrors)}>\r\n          <div className=\"formGroup\">\r\n            <input\r\n              id=\"username\"\r\n              className=\"formField\"\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              aria-invalid={errors.username ? 'true' : 'false'}\r\n              {...register('username', {\r\n                required: true,\r\n                minLength: 3,\r\n                maxLength: 10,\r\n                pattern: /^[a-z0-9]+$/i,\r\n              })}\r\n            />\r\n            <label className=\"formLabel\" htmlFor=\"username\">\r\n              Username\r\n            </label>\r\n          </div>\r\n\r\n          {userError && (\r\n            <span role=\"alert\" className=\"fieldError\">\r\n              {userErrors[userError]}\r\n            </span>\r\n          )}\r\n\r\n          <div className=\"formGroup\">\r\n            <input\r\n              id=\"email\"\r\n              className=\"formField\"\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              aria-invalid={errors.email ? 'true' : 'false'}\r\n              {...register('email', {\r\n                required: true,\r\n                maxLength: 30,\r\n                pattern: /\\S+@\\S+\\.\\S+/,\r\n              })}\r\n            />\r\n            <label className=\"formLabel\" htmlFor=\"email\">\r\n              Email\r\n            </label>\r\n          </div>\r\n\r\n          {emailError && (\r\n            <span role=\"alert\" className=\"fieldError\">\r\n              {emailErrors[emailError]}\r\n            </span>\r\n          )}\r\n\r\n          <div className=\"formGroup\">\r\n            <input\r\n              id=\"password\"\r\n              className=\"formField\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              aria-invalid={errors.password ? 'true' : 'false'}\r\n              {...register('password', {\r\n                required: true,\r\n                minLength: 6,\r\n                maxLength: 24,\r\n              })}\r\n            />\r\n            <label className=\"formLabel\" htmlFor=\"password\">\r\n              Password\r\n            </label>\r\n          </div>\r\n\r\n          {passError && (\r\n            <span role=\"alert\" className=\"fieldError\">\r\n              {passErrors[passError]}\r\n            </span>\r\n          )}\r\n\r\n          <div className=\"register\">\r\n            <button type=\"submit\" className=\"btn\">\r\n              <svg\r\n                width=\"180px\"\r\n                height=\"60px\"\r\n                viewBox=\"0 0 180 60\"\r\n                className=\"border\"\r\n              >\r\n                <polyline\r\n                  points=\"179,1 179,59 1,59 1,1 179,1\"\r\n                  className=\"bg-line\"\r\n                />\r\n                <polyline\r\n                  points=\"179,1 179,59 1,59 1,1 179,1\"\r\n                  className=\"hl-line\"\r\n                />\r\n              </svg>\r\n              <span>Register</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}