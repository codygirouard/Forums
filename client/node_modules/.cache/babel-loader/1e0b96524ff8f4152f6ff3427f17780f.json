{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cag0398\\\\Desktop\\\\forums\\\\client\\\\src\\\\Post.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useReducer, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Header } from './Header';\nimport { dateToString } from './postDate';\nimport { LikeButton } from './Like';\nimport Alert from './alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Reply = ({\n  reply\n}) => {\n  const {\n    author,\n    body,\n    date\n  } = reply;\n  const time = dateToString(date);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reply\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"authorTime\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"time\",\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"bodyText\",\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Reply;\n\nconst Replies = ({\n  replies\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"replies\",\n    children: replies.slice().reverse().map(reply => {\n      return /*#__PURE__*/_jsxDEV(Reply, {\n        reply: reply\n      }, reply._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 18\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Replies;\n\nconst Comment = ({\n  postId,\n  commentId,\n  comment\n}) => {\n  _s();\n\n  const {\n    author,\n    body,\n    replies,\n    date\n  } = comment;\n  const time = dateToString(date);\n  const [hideCommentBox, toggleHideCommentBox] = useReducer(hideCommentBox => {\n    return !hideCommentBox;\n  }, true);\n\n  const handleClick = () => {\n    toggleHideCommentBox();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"authorTime\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"time\",\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"bodyText\",\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submitButton\",\n      onClick: handleClick,\n      children: \"Reply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      style: {\n        display: hideCommentBox ? 'none' : 'block'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"commentBox\",\n        \"aria-label\": \"Reply Box\",\n        rows: \"1\",\n        cols: \"1\",\n        name: \"Reply Box\",\n        defaultValue: \"Type reply here...\",\n        maxLength: 500\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"replyButton\",\n        children: \"Submit Reply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Replies, {\n      replies: replies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comment, \"MgAezypHxhmhsar1TGR75vh4l4o=\");\n\n_c3 = Comment;\n\nconst Comments = ({\n  id,\n  comments\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: comments.slice().reverse().map(comment => {\n      return /*#__PURE__*/_jsxDEV(Comment, {\n        postId: id,\n        commentId: comment._id,\n        comment: comment\n      }, comment._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Comments;\n\nconst Content = ({\n  postId,\n  likes,\n  usersLiked,\n  author,\n  body,\n  title,\n  date\n}) => {\n  const time = dateToString(date);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(LikeButton, {\n      totalLikes: likes,\n      usersLiked: usersLiked,\n      postId: postId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contentPost\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"authorTime\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"time\",\n          children: time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"bodyText\",\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = Content;\nexport const Post = () => {\n  _s2();\n\n  const {\n    id\n  } = useParams();\n  const [data, setData] = useState(null);\n  const [commentText, setText] = useState('Type comment here...');\n  useEffect(() => {\n    fetch(`http://localhost:3001/be/getPost/${id}`).then(response => response.json()).then(setData);\n  }, [id]);\n\n  const handleInput = ({\n    target\n  }) => {\n    target.style.height = '';\n    target.style.height = target.scrollHeight + 10 + 'px';\n    setText(target.value);\n  };\n\n  const handleFocus = ({\n    target\n  }) => {\n    if (target.value === 'Type comment here...') {\n      target.value = '';\n    }\n  };\n\n  const handleBlur = ({\n    target\n  }) => {\n    if (target.value === '') {\n      target.value = 'Type comment here...';\n    }\n  };\n\n  const handleClick = ({\n    target\n  }) => {\n    const user = localStorage.getItem('name');\n    const alertModal = document.getElementById('alertModal');\n    const alertText = document.getElementById('alertText');\n\n    if (!user) {\n      alertText.innerHTML = 'You need to login to submit comments!';\n      alertModal.style.display = 'block';\n    } else if (commentText === 'Type comment here...') {\n      alertText.innerHTML = 'You need to enter text to post a comment!';\n      alertModal.style.display = 'block';\n    } else {\n      const commentInfo = {\n        postId: id,\n        author: user,\n        body: commentText\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(commentInfo)\n      };\n      fetch('http://localhost:3001/be/newComment', options).then(response => response.json()).then(response => setData(response.result));\n    }\n\n    target.blur();\n  };\n\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    const {\n      _id,\n      likes,\n      usersLiked,\n      author,\n      body,\n      title,\n      date,\n      comments\n    } = data;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        scroll: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postContainer\",\n        children: [/*#__PURE__*/_jsxDEV(Content, {\n          postId: _id,\n          likes: likes,\n          usersLiked: usersLiked,\n          author: author,\n          body: body,\n          title: title,\n          date: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"commentBox\",\n            \"aria-label\": \"Comment Box\",\n            rows: \"1\",\n            cols: \"1\",\n            name: \"Comment Box\",\n            value: commentText,\n            maxLength: \"500\",\n            onInput: handleInput,\n            onFocus: handleFocus,\n            onBlur: handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"commentBtn\",\n            onClick: handleClick,\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"100px\",\n              height: \"40px\",\n              viewBox: \"0 0 100 40\",\n              className: \"border\",\n              children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n                points: \"99,1 99,39 1,39 1,1 99,1\",\n                className: \"bg-line\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                points: \"99,1 99,39 1,39 1,1 99,1\",\n                className: \"hl-line\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Comments, {\n          id: _id,\n          comments: comments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s2(Post, \"EAyiYxw2uajtz3Tlt10IM9DOpvY=\", false, function () {\n  return [useParams];\n});\n\n_c6 = Post;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Reply\");\n$RefreshReg$(_c2, \"Replies\");\n$RefreshReg$(_c3, \"Comment\");\n$RefreshReg$(_c4, \"Comments\");\n$RefreshReg$(_c5, \"Content\");\n$RefreshReg$(_c6, \"Post\");","map":{"version":3,"sources":["C:/Users/cag0398/Desktop/forums/client/src/Post.js"],"names":["useEffect","useReducer","useState","useParams","Header","dateToString","LikeButton","Alert","Reply","reply","author","body","date","time","Replies","replies","slice","reverse","map","_id","Comment","postId","commentId","comment","hideCommentBox","toggleHideCommentBox","handleClick","display","Comments","id","comments","Content","likes","usersLiked","title","Post","data","setData","commentText","setText","fetch","then","response","json","handleInput","target","style","height","scrollHeight","value","handleFocus","handleBlur","user","localStorage","getItem","alertModal","document","getElementById","alertText","innerHTML","commentInfo","options","method","headers","JSON","stringify","result","blur"],"mappings":"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","sourcesContent":["import { useEffect, useReducer, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Header } from './Header';\r\nimport { dateToString } from './postDate';\r\nimport { LikeButton } from './Like';\r\nimport Alert from './alert';\r\n\r\nconst Reply = ({ reply }) => {\r\n  const { author, body, date } = reply;\r\n\r\n  const time = dateToString(date);\r\n\r\n  return (\r\n    <div className=\"reply\">\r\n      <div className=\"authorTime\">\r\n        <h5>{author}</h5>\r\n        <p className=\"time\">{time}</p>\r\n      </div>\r\n\r\n      <p className=\"bodyText\">{body}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Replies = ({ replies }) => {\r\n  return (\r\n    <div className=\"replies\">\r\n      {replies\r\n        .slice()\r\n        .reverse()\r\n        .map((reply) => {\r\n          return <Reply key={reply._id} reply={reply} />;\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Comment = ({ postId, commentId, comment }) => {\r\n  const { author, body, replies, date } = comment;\r\n  const time = dateToString(date);\r\n\r\n  const [hideCommentBox, toggleHideCommentBox] = useReducer(\r\n    (hideCommentBox) => {\r\n      return !hideCommentBox;\r\n    },\r\n    true\r\n  );\r\n\r\n  const handleClick = () => {\r\n    toggleHideCommentBox();\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment\">\r\n      <div className=\"authorTime\">\r\n        <h5>{author}</h5>\r\n        <p className=\"time\">{time}</p>\r\n      </div>\r\n      <p className=\"bodyText\">{body}</p>\r\n      <button className=\"submitButton\" onClick={handleClick}>\r\n        Reply\r\n      </button>\r\n      <div\r\n        className=\"comment\"\r\n        style={{ display: hideCommentBox ? 'none' : 'block' }}\r\n      >\r\n        <textarea\r\n          className=\"commentBox\"\r\n          aria-label=\"Reply Box\"\r\n          rows=\"1\"\r\n          cols=\"1\"\r\n          name=\"Reply Box\"\r\n          defaultValue=\"Type reply here...\"\r\n          maxLength={500}\r\n        ></textarea>\r\n        <button className=\"replyButton\">Submit Reply</button>\r\n      </div>\r\n      <Replies replies={replies} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Comments = ({ id, comments }) => {\r\n  return (\r\n    <div className=\"comments\">\r\n      {comments\r\n        .slice()\r\n        .reverse()\r\n        .map((comment) => {\r\n          return (\r\n            <Comment\r\n              key={comment._id}\r\n              postId={id}\r\n              commentId={comment._id}\r\n              comment={comment}\r\n            />\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Content = ({ postId, likes, usersLiked, author, body, title, date }) => {\r\n  const time = dateToString(date);\r\n  return (\r\n    <div className=\"content\">\r\n      <LikeButton totalLikes={likes} usersLiked={usersLiked} postId={postId} />\r\n      <div className=\"contentPost\">\r\n        <h3>{title}</h3>\r\n        <div className=\"authorTime\">\r\n          <h5>{author}</h5>\r\n          <p className=\"time\">{time}</p>\r\n        </div>\r\n        <p className=\"bodyText\">{body}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Post = () => {\r\n  const { id } = useParams();\r\n\r\n  const [data, setData] = useState(null);\r\n  const [commentText, setText] = useState('Type comment here...');\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:3001/be/getPost/${id}`)\r\n      .then((response) => response.json())\r\n      .then(setData);\r\n  }, [id]);\r\n\r\n  const handleInput = ({ target }) => {\r\n    target.style.height = '';\r\n    target.style.height = target.scrollHeight + 10 + 'px';\r\n    setText(target.value);\r\n  };\r\n\r\n  const handleFocus = ({ target }) => {\r\n    if (target.value === 'Type comment here...') {\r\n      target.value = '';\r\n    }\r\n  };\r\n\r\n  const handleBlur = ({ target }) => {\r\n    if (target.value === '') {\r\n      target.value = 'Type comment here...';\r\n    }\r\n  };\r\n\r\n  const handleClick = ({ target }) => {\r\n    const user = localStorage.getItem('name');\r\n    const alertModal = document.getElementById('alertModal');\r\n    const alertText = document.getElementById('alertText');\r\n\r\n    if (!user) {\r\n      alertText.innerHTML = 'You need to login to submit comments!';\r\n      alertModal.style.display = 'block';\r\n    } else if (commentText === 'Type comment here...') {\r\n      alertText.innerHTML = 'You need to enter text to post a comment!';\r\n      alertModal.style.display = 'block';\r\n    } else {\r\n      const commentInfo = {\r\n        postId: id,\r\n        author: user,\r\n        body: commentText,\r\n      };\r\n      const options = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(commentInfo),\r\n      };\r\n\r\n      fetch('http://localhost:3001/be/newComment', options)\r\n        .then((response) => response.json())\r\n        .then((response) => setData(response.result));\r\n    }\r\n    target.blur();\r\n  };\r\n\r\n  if (!data) {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <div className=\"loader\"></div>\r\n      </>\r\n    );\r\n  } else {\r\n    const { _id, likes, usersLiked, author, body, title, date, comments } =\r\n      data;\r\n    return (\r\n      <>\r\n        <Header scroll={true} />\r\n        <div className=\"postContainer\">\r\n          <Content\r\n            postId={_id}\r\n            likes={likes}\r\n            usersLiked={usersLiked}\r\n            author={author}\r\n            body={body}\r\n            title={title}\r\n            date={date}\r\n          />\r\n          <div className=\"comment\">\r\n            <textarea\r\n              className=\"commentBox\"\r\n              aria-label=\"Comment Box\"\r\n              rows=\"1\"\r\n              cols=\"1\"\r\n              name=\"Comment Box\"\r\n              value={commentText}\r\n              maxLength=\"500\"\r\n              onInput={handleInput}\r\n              onFocus={handleFocus}\r\n              onBlur={handleBlur}\r\n            ></textarea>\r\n            <button className=\"commentBtn\" onClick={handleClick}>\r\n              <svg\r\n                width=\"100px\"\r\n                height=\"40px\"\r\n                viewBox=\"0 0 100 40\"\r\n                className=\"border\"\r\n              >\r\n                <polyline\r\n                  points=\"99,1 99,39 1,39 1,1 99,1\"\r\n                  className=\"bg-line\"\r\n                />\r\n                <polyline\r\n                  points=\"99,1 99,39 1,39 1,1 99,1\"\r\n                  className=\"hl-line\"\r\n                />\r\n              </svg>\r\n              <span>Submit</span>\r\n            </button>\r\n          </div>\r\n          <Comments id={_id} comments={comments} />\r\n        </div>\r\n        <Alert />\r\n      </>\r\n    );\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}