{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cag0398\\\\Desktop\\\\forums\\\\client\\\\src\\\\Post.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useReducer, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Header } from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Reply = ({\n  reply\n}) => {\n  const {\n    author,\n    body,\n    date\n  } = reply;\n  const timeDiff = new Date(Date.now() - Date.parse(date));\n\n  const getTimeString = (num, unit) => {\n    return num + (num === 1 ? ` ${unit} ago` : ` ${unit}s ago`);\n  };\n\n  let time = getTimeString(timeDiff.getSeconds(), 'second');\n  console.log(`Years: ${timeDiff.getFullYear()}, Months: ${timeDiff.getMonth()}, Days: ${timeDiff.getDay()}, Hours: ${timeDiff.getHours()}, Minutes: ${timeDiff.getMinutes()}, ${time}`);\n\n  if (timeDiff.getMinutes() > 0) {\n    time = getTimeString(timeDiff.getMinutes(), 'minute');\n  }\n\n  if (timeDiff.getHours() > 0) {\n    time = getTimeString(timeDiff.getHours(), 'hour');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reply\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"time\",\n      children: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Reply;\n\nconst Replies = ({\n  replies\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"replies\",\n    children: replies.map(reply => {\n      return /*#__PURE__*/_jsxDEV(Reply, {\n        reply: reply\n      }, reply._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Replies;\n\nconst Comment = ({\n  postId,\n  commentId,\n  comment\n}) => {\n  _s();\n\n  const {\n    author,\n    body,\n    replies\n  } = comment;\n  const [hideCommentBox, toggleHideCommentBox] = useReducer(hideCommentBox => {\n    return !hideCommentBox;\n  }, true);\n\n  const handleClick = () => {\n    toggleHideCommentBox();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Reply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentBox\",\n      style: {\n        display: hideCommentBox ? 'none' : 'block'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"1\",\n        cols: \"1\",\n        name: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Replies, {\n      replies: replies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comment, \"MgAezypHxhmhsar1TGR75vh4l4o=\");\n\n_c3 = Comment;\n\nconst Comments = ({\n  id,\n  comments\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: comments.map(comment => {\n      return /*#__PURE__*/_jsxDEV(Comment, {\n        postId: id,\n        commentId: comment._id,\n        comment: comment\n      }, comment._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Comments;\n\nconst Content = ({\n  id,\n  likes,\n  author,\n  body,\n  title,\n  date\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: `${likes} Likes`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contentPost\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = Content;\nexport const Post = () => {\n  _s2();\n\n  const {\n    id\n  } = useParams();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetch(`http://localhost:3001/be/getPost/${id}`).then(response => response.json()).then(setData);\n  }, [id]);\n\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    const {\n      _id,\n      likes,\n      author,\n      body,\n      title,\n      date,\n      comments\n    } = data;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postContainer\",\n        children: [/*#__PURE__*/_jsxDEV(Content, {\n          id: _id,\n          likes: likes,\n          author: author,\n          body: body,\n          title: title,\n          date: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"commentBox\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"1\",\n            cols: \"1\",\n            name: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Comments, {\n          id: _id,\n          comments: comments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s2(Post, \"bKWtrFi4rDiB0nUS9DgR6D7F0mg=\", false, function () {\n  return [useParams];\n});\n\n_c6 = Post;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Reply\");\n$RefreshReg$(_c2, \"Replies\");\n$RefreshReg$(_c3, \"Comment\");\n$RefreshReg$(_c4, \"Comments\");\n$RefreshReg$(_c5, \"Content\");\n$RefreshReg$(_c6, \"Post\");","map":{"version":3,"sources":["C:/Users/cag0398/Desktop/forums/client/src/Post.js"],"names":["useEffect","useReducer","useState","useParams","Header","Reply","reply","author","body","date","timeDiff","Date","now","parse","getTimeString","num","unit","time","getSeconds","console","log","getFullYear","getMonth","getDay","getHours","getMinutes","Replies","replies","map","_id","Comment","postId","commentId","comment","hideCommentBox","toggleHideCommentBox","handleClick","display","Comments","id","comments","Content","likes","title","Post","data","setData","fetch","then","response","json"],"mappings":"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","sourcesContent":["import { useEffect, useReducer, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Header } from './Header';\r\n\r\nconst Reply = ({ reply }) => {\r\n  const { author, body, date } = reply;\r\n  const timeDiff = new Date(Date.now() - Date.parse(date));\r\n\r\n  const getTimeString = (num, unit) => {\r\n    return num + (num === 1 ? ` ${unit} ago` : ` ${unit}s ago`);\r\n  };\r\n\r\n  let time = getTimeString(timeDiff.getSeconds(), 'second');\r\n  console.log(\r\n    `Years: ${timeDiff.getFullYear()}, Months: ${timeDiff.getMonth()}, Days: ${timeDiff.getDay()}, Hours: ${timeDiff.getHours()}, Minutes: ${timeDiff.getMinutes()}, ${time}`\r\n  );\r\n\r\n  if (timeDiff.getMinutes() > 0) {\r\n    time = getTimeString(timeDiff.getMinutes(), 'minute');\r\n  }\r\n  if (timeDiff.getHours() > 0) {\r\n    time = getTimeString(timeDiff.getHours(), 'hour');\r\n  }\r\n\r\n  return (\r\n    <div className=\"reply\">\r\n      <h5>{author}</h5>\r\n      <p className=\"time\">{date}</p>\r\n      <p>{body}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Replies = ({ replies }) => {\r\n  return (\r\n    <div className=\"replies\">\r\n      {replies.map((reply) => {\r\n        return <Reply key={reply._id} reply={reply} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Comment = ({ postId, commentId, comment }) => {\r\n  const { author, body, replies } = comment;\r\n\r\n  const [hideCommentBox, toggleHideCommentBox] = useReducer(\r\n    (hideCommentBox) => {\r\n      return !hideCommentBox;\r\n    },\r\n    true\r\n  );\r\n\r\n  const handleClick = () => {\r\n    toggleHideCommentBox();\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment\">\r\n      <h5>{author}</h5>\r\n      <p>{body}</p>\r\n      <button onClick={handleClick}>Reply</button>\r\n      <div\r\n        className=\"commentBox\"\r\n        style={{ display: hideCommentBox ? 'none' : 'block' }}\r\n      >\r\n        <textarea rows=\"1\" cols=\"1\" name=\"text\"></textarea>\r\n      </div>\r\n      <Replies replies={replies} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Comments = ({ id, comments }) => {\r\n  return (\r\n    <div className=\"comments\">\r\n      {comments.map((comment) => {\r\n        return (\r\n          <Comment\r\n            key={comment._id}\r\n            postId={id}\r\n            commentId={comment._id}\r\n            comment={comment}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Content = ({ id, likes, author, body, title, date }) => {\r\n  return (\r\n    <div className=\"content\">\r\n      <p>{`${likes} Likes`}</p>\r\n      <div className=\"contentPost\">\r\n        <h3>{title}</h3>\r\n        <h5>{author}</h5>\r\n        <p>{body}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Post = () => {\r\n  const { id } = useParams();\r\n\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:3001/be/getPost/${id}`)\r\n      .then((response) => response.json())\r\n      .then(setData);\r\n  }, [id]);\r\n\r\n  if (!data) {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <h1>Loading...</h1>\r\n      </>\r\n    );\r\n  } else {\r\n    const { _id, likes, author, body, title, date, comments } = data;\r\n    return (\r\n      <>\r\n        <Header />\r\n        <div className=\"postContainer\">\r\n          <Content\r\n            id={_id}\r\n            likes={likes}\r\n            author={author}\r\n            body={body}\r\n            title={title}\r\n            date={date}\r\n          />\r\n          <div className=\"commentBox\">\r\n            <textarea rows=\"1\" cols=\"1\" name=\"text\"></textarea>\r\n          </div>\r\n          <Comments id={_id} comments={comments} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}