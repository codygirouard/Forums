{"version":3,"sources":["header.js","postDate.js","like.js","alert.js","Posts.js","Post.js","Login.js","NewPost.js","NotFound.js","App.js","index.js"],"names":["Header","scroll","login","useState","loggedIn","setLoggedIn","useEffect","localStorage","getItem","to","className","onClick","window","scrollTo","removeItem","location","reload","timeToString","num","unit","dateToString","date","Date","milliseconds","months","days","hours","minutes","seconds","Math","floor","years","convertMS","time","LikeButton","totalLikes","usersLiked","postId","likes","setLikes","isLiked","setIsLiked","users","setUsers","user","indexOf","userLikeInfo","username","options","method","headers","body","JSON","stringify","filter","name","fetch","then","response","json","oldUsers","alertModal","document","getElementById","innerHTML","style","display","width","height","xmlns","d","x","y","textAnchor","dy","fill","Alert","id","e","modal","target","NewPostButton","nav","useNavigate","Post","author","title","commentCount","dateString","Posts","pageNum","data","setData","posts","err","map","_id","Page","currPage","setCurrPage","loading","setLoading","timeout","handleScroll","innerHeight","pageYOffset","offsetHeight","setTimeout","addEventListener","clearTimeout","removeEventListener","Feed","Reply","reply","Replies","replies","slice","reverse","Comment","commentId","comment","setReplies","replyText","setText","useReducer","hideCommentBox","toggleHideCommentBox","alertText","rows","cols","value","maxLength","onFocus","onBlur","onInput","scrollHeight","replyInfo","oldReplies","random","blur","viewBox","points","Comments","comments","Content","useParams","commentText","commentInfo","result","length","SignIn","useForm","register","handleSubmit","errors","formState","navigate","userError","setUserError","passError","setPassError","onSubmit","a","loginInfo","toLowerCase","pwd","password","res","succ","setItem","type","autoFocus","placeholder","required","minLength","htmlFor","role","SignUp","emailError","setEmailError","email","pattern","NewPost","titleError","setTitleError","bodyError","setBodyError","postInfo","NotFound","App","path","element","ReactDOM","render"],"mappings":"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","file":"static/js/main.5c825cbf.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = ({ scroll, login }) => {\r\n  const [loggedIn, setLoggedIn] = useState();\r\n\r\n  useEffect(() => {\r\n    setLoggedIn(!!localStorage.getItem('name'));\r\n  }, []);\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('name');\r\n    window.location.reload();\r\n  };\r\n\r\n  const scrollToTop = () => {\r\n    if (scroll) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  };\r\n\r\n  if (login) {\r\n    return (\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/\">\r\n              <i className=\"fas fa-home\"></i>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/\" onClick={scrollToTop}>\r\n              <i className=\"fas fa-home\"></i>\r\n            </Link>\r\n          </li>\r\n          <li className=\"dropdown\">\r\n            <button className=\"dropdownBtn\">\r\n              {(loggedIn && localStorage.getItem('name')) || 'Account'}\r\n            </button>\r\n            <div className=\"dropdownContent\">\r\n              {!loggedIn && (\r\n                <>\r\n                  <Link to=\"/login\">Login</Link>\r\n                  <Link to=\"/register\">Register</Link>\r\n                </>\r\n              )}\r\n\r\n              {loggedIn && <button onClick={logout}>Logout</button>}\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const timeToString = (num, unit) => {\r\n  return num + (num === 1 ? ` ${unit} ago` : ` ${unit}s ago`);\r\n};\r\n\r\nconst convertMS = (milliseconds) => {\r\n  let years, months, days, hours, minutes, seconds;\r\n  seconds = Math.floor(milliseconds / 1000);\r\n  minutes = Math.floor(seconds / 60);\r\n  seconds = seconds % 60;\r\n  hours = Math.floor(minutes / 60);\r\n  minutes = minutes % 60;\r\n  days = Math.floor(hours / 24);\r\n  hours = hours % 24;\r\n  months = Math.floor(days / 30);\r\n  days = days % 30;\r\n  years = Math.floor(months / 12);\r\n  months = months % 12;\r\n\r\n  return {\r\n    years,\r\n    months,\r\n    days,\r\n    hours,\r\n    minutes,\r\n    seconds,\r\n  };\r\n};\r\n\r\nexport const dateToString = (date) => {\r\n  if (date === 'A few seconds ago...') {\r\n    return 'A few seconds ago...';\r\n  }\r\n  date = new Date(date);\r\n  const now = new Date();\r\n  const { years, months, days, hours, minutes, seconds } = convertMS(\r\n    now - date\r\n  );\r\n\r\n  let time = timeToString(seconds, 'second');\r\n\r\n  if (years - 1970 > 0) {\r\n    time = timeToString(years - 1970, 'year');\r\n  } else if (months > 0) {\r\n    time = timeToString(months, 'month');\r\n  } else if (days > 0) {\r\n    time = timeToString(days, 'day');\r\n  } else if (hours > 0) {\r\n    time = timeToString(hours, 'hour');\r\n  } else if (minutes > 0) {\r\n    time = timeToString(minutes, 'minute');\r\n  }\r\n\r\n  return time;\r\n};\r\n","import { useEffect, useState } from 'react';\r\n\r\nexport const LikeButton = ({ totalLikes, usersLiked, postId }) => {\r\n  const [likes, setLikes] = useState(totalLikes); // total like count of post\r\n  const [isLiked, setIsLiked] = useState(false); // is post liked by user\r\n  const [users, setUsers] = useState([]); // all users that liked post\r\n  const user = localStorage.getItem('name');\r\n\r\n  const handleClick = () => {\r\n    const userLikeInfo = {\r\n      postId,\r\n      username: user,\r\n    };\r\n\r\n    const options = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(userLikeInfo),\r\n    };\r\n\r\n    if (user) {\r\n      if (isLiked) {\r\n        setLikes(likes - 1);\r\n        setUsers(users.filter((name) => name !== user));\r\n\r\n        fetch('/be/unlikePost', options).then((response) => response.json());\r\n      } else {\r\n        setLikes(likes + 1);\r\n        setUsers((oldUsers) => [...oldUsers, user]);\r\n\r\n        fetch('/be/likePost', options).then((response) => response.json());\r\n      }\r\n\r\n      setIsLiked(!isLiked);\r\n    } else {\r\n      // not logged in, alert user of error\r\n      const alertModal = document.getElementById('alertModal');\r\n      const alertText = document.getElementById('alertText');\r\n\r\n      alertText.innerHTML = 'You need to login to like posts!';\r\n      alertModal.style.display = 'block';\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (usersLiked) {\r\n      setUsers(usersLiked);\r\n      setIsLiked(usersLiked.indexOf(user) >= 0);\r\n    }\r\n  }, [usersLiked, user]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"postLikes\" onClick={handleClick}>\r\n        <svg width=\"50\" height=\"45\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g>\r\n            <title>Like</title>\r\n            <path\r\n              className={isLiked ? 'fullHeart' : 'emptyHeart'}\r\n              d=\"m24.95551,11.32701c9.87674,-25.35266 48.57414,0 0,32.59628c-48.57414,-32.59628 -9.87674,-57.94894 0,-32.59628z\"\r\n            />\r\n          </g>\r\n          <text\r\n            x=\"50%\"\r\n            y=\"55%\"\r\n            textAnchor=\"middle\"\r\n            dy=\".3em\"\r\n            fill={isLiked ? '#fff' : '#000'}\r\n          >\r\n            {likes}\r\n          </text>\r\n        </svg>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","const Alert = () => {\r\n  // close alert modal on pressing 'X'\r\n  const closeButton = () => {\r\n    document.getElementById('alertModal').style.display = 'none';\r\n  };\r\n\r\n  // close alert modal on pressing black background\r\n  const clickOutside = (e) => {\r\n    const modal = document.getElementById('alertModal');\r\n    if (e.target === modal) {\r\n      modal.style.display = 'none';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"alertModal\" onClick={clickOutside}>\r\n      <div className=\"alertContent\">\r\n        <span className=\"close\" onClick={closeButton}>\r\n          &times;\r\n        </span>\r\n        <p id=\"alertText\">You need to login to like posts!</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Header from './header';\r\nimport { dateToString } from './postDate';\r\nimport { LikeButton } from './like';\r\nimport Alert from './alert';\r\n\r\nconst NewPostButton = () => {\r\n  const nav = useNavigate();\r\n  const handleClick = () => {\r\n    if (localStorage.getItem('name')) {\r\n      nav('/newPost');\r\n    } else {\r\n      // user not logged in, cannot make new posts\r\n      const alertModal = document.getElementById('alertModal');\r\n      const alertText = document.getElementById('alertText');\r\n      alertText.innerHTML = 'You need to login to make new posts!';\r\n      alertModal.style.display = 'block';\r\n    }\r\n  };\r\n  return (\r\n    <button className=\"newPostButton\" onClick={handleClick}>\r\n      +\r\n    </button>\r\n  );\r\n};\r\n\r\nconst Post = ({ id, author, title, commentCount, likes, usersLiked, date }) => {\r\n  const dateString = dateToString(date);\r\n\r\n  return (\r\n    <div className=\"post\">\r\n      <LikeButton totalLikes={likes} usersLiked={usersLiked} postId={id} />\r\n      <Link to={`post/${id}`} className=\"commentLink\">\r\n        <div className=\"postContents\">\r\n          <h3 className=\"postTitle\">{title}</h3>\r\n          <h4 className=\"postAuthor\">{`Posted by ${author} ${dateString}`}</h4>\r\n          <p className=\"postComments\">{`${commentCount} comments`}</p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Posts = ({ pageNum }) => {\r\n  const [data, setData] = useState(null);\r\n\r\n  // load 15 most recent posts on start\r\n  useEffect(() => {\r\n    fetch(`/be/getPosts/${pageNum}`)\r\n      .then((response) => response.json())\r\n      .then((posts) => {\r\n        if (!posts.err) {\r\n          setData((d) => {\r\n            if (d) {\r\n              return [...d, ...posts];\r\n            } else {\r\n              return posts;\r\n            }\r\n          });\r\n        }\r\n      });\r\n  }, [pageNum]);\r\n\r\n  if (!data) {\r\n    return <div className=\"loader\"></div>;\r\n  } else {\r\n    return data.map(\r\n      ({ _id, author, title, commentCount, likes, usersLiked, date }) => (\r\n        <Post\r\n          key={_id}\r\n          id={_id}\r\n          author={author}\r\n          title={title}\r\n          commentCount={commentCount}\r\n          likes={likes}\r\n          usersLiked={usersLiked}\r\n          date={date}\r\n        />\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\nconst Page = () => {\r\n  const [currPage, setCurrPage] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n  let timeout = null;\r\n\r\n  const nextPage = () => {\r\n    setCurrPage(currPage + 1);\r\n  };\r\n\r\n  const handleScroll = () => {\r\n    if (\r\n      window.innerHeight + window.pageYOffset >=\r\n        document.body.offsetHeight - 2 &&\r\n      !loading\r\n    ) {\r\n      setLoading(true);\r\n      nextPage();\r\n      timeout = setTimeout(() => {\r\n        setLoading(false);\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = 'Home - Denton Forums';\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => {\r\n      clearTimeout(timeout);\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"posts\">\r\n      <Posts pageNum={currPage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Feed = () => {\r\n  return (\r\n    <>\r\n      <Header scroll={true} />\r\n      <Page />\r\n      <NewPostButton />\r\n      <Alert />\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useReducer, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport Header from './header';\r\nimport { dateToString } from './postDate';\r\nimport { LikeButton } from './like';\r\nimport Alert from './alert';\r\n\r\nconst Reply = ({ reply }) => {\r\n  const { author, body, date } = reply;\r\n\r\n  const time = dateToString(date);\r\n\r\n  return (\r\n    <div className=\"reply\">\r\n      <div className=\"authorTime\">\r\n        <h5>{author}</h5>\r\n        <p className=\"time\">{time}</p>\r\n      </div>\r\n\r\n      <p className=\"bodyText\">{body}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Replies = ({ replies }) => {\r\n  return (\r\n    <div className=\"replies\">\r\n      {replies\r\n        .slice()\r\n        .reverse()\r\n        .map((reply) => {\r\n          return <Reply key={reply._id} reply={reply} />;\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Comment = ({ postId, commentId, comment }) => {\r\n  const { author, body, date } = comment;\r\n  const [replies, setReplies] = useState(comment.replies);\r\n  const time = dateToString(date);\r\n  const [replyText, setText] = useState('Type reply here...');\r\n\r\n  const [hideCommentBox, toggleHideCommentBox] = useReducer(\r\n    (hideCommentBox) => {\r\n      return !hideCommentBox;\r\n    },\r\n    true\r\n  );\r\n\r\n  const toggleReplyBox = () => {\r\n    const user = localStorage.getItem('name');\r\n    const alertModal = document.getElementById('alertModal');\r\n    const alertText = document.getElementById('alertText');\r\n\r\n    if (!user) {\r\n      alertText.innerHTML = 'You need to login to reply!';\r\n      alertModal.style.display = 'block';\r\n    } else {\r\n      toggleHideCommentBox();\r\n    }\r\n  };\r\n\r\n  // reply box submit button clicked\r\n  const handleClick = ({ target }) => {\r\n    const user = localStorage.getItem('name');\r\n    const alertModal = document.getElementById('alertModal');\r\n    const alertText = document.getElementById('alertText');\r\n\r\n    if (!user) {\r\n      alertText.innerHTML = 'You need to login to submit replies!';\r\n      alertModal.style.display = 'block';\r\n    } else if (replyText === 'Type reply here...') {\r\n      alertText.innerHTML = 'You need to enter text to post a reply!';\r\n      alertModal.style.display = 'block';\r\n    } else {\r\n      const replyInfo = {\r\n        postId,\r\n        commentId,\r\n        author: user,\r\n        body: replyText,\r\n      };\r\n      const options = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(replyInfo),\r\n      };\r\n\r\n      fetch('/be/newReply', options);\r\n      setReplies((oldReplies) => [\r\n        ...oldReplies,\r\n        {\r\n          _id: Math.floor(Math.random() * 100000),\r\n          date: 'A few seconds ago...',\r\n          author: user,\r\n          body: replyText,\r\n        },\r\n      ]);\r\n      setText('Type reply here...');\r\n    }\r\n    target.blur();\r\n    toggleHideCommentBox();\r\n  };\r\n\r\n  const handleInput = ({ target }) => {\r\n    target.style.height = '';\r\n    target.style.height = target.scrollHeight + 5 + 'px';\r\n    setText(target.value);\r\n  };\r\n\r\n  const handleFocus = ({ target }) => {\r\n    if (target.value === 'Type reply here...') {\r\n      target.value = '';\r\n    }\r\n  };\r\n\r\n  const handleBlur = ({ target }) => {\r\n    if (target.value === '') {\r\n      target.value = 'Type reply here...';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment\">\r\n      <div className=\"authorTime\">\r\n        <h5>{author}</h5>\r\n        <p className=\"time\">{time}</p>\r\n      </div>\r\n      <p className=\"bodyText\">{body}</p>\r\n      <button className=\"replyToggleBtn\" onClick={toggleReplyBox}>\r\n        Reply\r\n      </button>\r\n      <div\r\n        className=\"replyContainer\"\r\n        style={{ display: hideCommentBox ? 'none' : 'block' }}\r\n      >\r\n        <textarea\r\n          className=\"commentBox\"\r\n          aria-label=\"Reply Box\"\r\n          rows=\"1\"\r\n          cols=\"1\"\r\n          name=\"Reply Box\"\r\n          value={replyText}\r\n          maxLength={500}\r\n          onFocus={handleFocus}\r\n          onBlur={handleBlur}\r\n          onInput={handleInput}\r\n        ></textarea>\r\n        <button className=\"commentBtn\" onClick={handleClick}>\r\n          <svg\r\n            width=\"100px\"\r\n            height=\"30px\"\r\n            viewBox=\"0 0 100 30\"\r\n            className=\"border\"\r\n          >\r\n            <polyline points=\"99,1 99,29 1,29 1,1 99,1\" className=\"bg-line\" />\r\n            <polyline points=\"99,1 99,29 1,29 1,1 99,1\" className=\"hl-line\" />\r\n          </svg>\r\n          <span>Submit</span>\r\n        </button>\r\n      </div>\r\n      <Replies replies={replies} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Comments = ({ id, comments }) => {\r\n  return (\r\n    <div className=\"comments\">\r\n      {comments\r\n        .slice()\r\n        .reverse()\r\n        .map((comment) => {\r\n          return (\r\n            <Comment\r\n              key={comment._id}\r\n              postId={id}\r\n              commentId={comment._id}\r\n              comment={comment}\r\n            />\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Content = ({ postId, likes, usersLiked, author, body, title, date }) => {\r\n  const time = dateToString(date);\r\n  return (\r\n    <div className=\"content\">\r\n      <LikeButton totalLikes={likes} usersLiked={usersLiked} postId={postId} />\r\n      <div className=\"contentPost\">\r\n        <h3>{title}</h3>\r\n        <div className=\"authorTime\">\r\n          <h5>{author}</h5>\r\n          <p className=\"time\">{time}</p>\r\n        </div>\r\n        <p className=\"bodyText\">{body}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Post = () => {\r\n  const { id } = useParams();\r\n\r\n  const [data, setData] = useState(null);\r\n  const [commentText, setText] = useState('Type comment here...');\r\n  const nav = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetch(`/be/getPost/${id}`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        // post id not found\r\n        if (!response || response.err) {\r\n          nav('/oops');\r\n        } else {\r\n          setData(response);\r\n          document.title = `${response.title} - Denton Forums`;\r\n        }\r\n      });\r\n  }, [nav, id]);\r\n\r\n  const handleInput = ({ target }) => {\r\n    target.style.height = '';\r\n    target.style.height = target.scrollHeight + 5 + 'px';\r\n    setText(target.value);\r\n  };\r\n\r\n  const handleFocus = ({ target }) => {\r\n    if (target.value === 'Type comment here...') {\r\n      target.value = '';\r\n    }\r\n  };\r\n\r\n  const handleBlur = ({ target }) => {\r\n    if (target.value === '') {\r\n      target.value = 'Type comment here...';\r\n    }\r\n  };\r\n\r\n  // comment submit button clicked\r\n  const handleClick = ({ target }) => {\r\n    const user = localStorage.getItem('name');\r\n    const alertModal = document.getElementById('alertModal');\r\n    const alertText = document.getElementById('alertText');\r\n\r\n    if (!user) {\r\n      alertText.innerHTML = 'You need to login to submit comments!';\r\n      alertModal.style.display = 'block';\r\n    } else if (commentText === 'Type comment here...') {\r\n      alertText.innerHTML = 'You need to enter text to post a comment!';\r\n      alertModal.style.display = 'block';\r\n    } else {\r\n      const commentInfo = {\r\n        postId: id,\r\n        author: user,\r\n        body: commentText,\r\n      };\r\n      const options = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(commentInfo),\r\n      };\r\n\r\n      fetch('/be/newComment', options)\r\n        .then((response) => response.json())\r\n        .then((response) => setData(response.result));\r\n      setText('Type comment here...');\r\n    }\r\n    target.blur();\r\n  };\r\n\r\n  if (!data) {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <div className=\"loader\"></div>\r\n      </>\r\n    );\r\n  } else {\r\n    const { _id, likes, usersLiked, author, body, title, date, comments } =\r\n      data;\r\n    return (\r\n      <>\r\n        <Header scroll={true} />\r\n        <div className=\"postContainer\">\r\n          <Content\r\n            postId={_id}\r\n            likes={likes}\r\n            usersLiked={usersLiked}\r\n            author={author}\r\n            body={body}\r\n            title={title}\r\n            date={date}\r\n          />\r\n          <div className=\"commentContainer\">\r\n            <textarea\r\n              className=\"commentBox\"\r\n              aria-label=\"Comment Box\"\r\n              rows=\"1\"\r\n              cols=\"1\"\r\n              name=\"Comment Box\"\r\n              value={commentText}\r\n              maxLength=\"500\"\r\n              onInput={handleInput}\r\n              onFocus={handleFocus}\r\n              onBlur={handleBlur}\r\n            ></textarea>\r\n            <button className=\"commentBtn\" onClick={handleClick}>\r\n              <svg\r\n                width=\"100px\"\r\n                height=\"40px\"\r\n                viewBox=\"0 0 100 40\"\r\n                className=\"border\"\r\n              >\r\n                <polyline\r\n                  points=\"99,1 99,39 1,39 1,1 99,1\"\r\n                  className=\"bg-line\"\r\n                />\r\n                <polyline\r\n                  points=\"99,1 99,39 1,39 1,1 99,1\"\r\n                  className=\"hl-line\"\r\n                />\r\n              </svg>\r\n              <span>Submit</span>\r\n            </button>\r\n          </div>\r\n          {comments.length > 0 ? (\r\n            <Comments id={_id} comments={comments} />\r\n          ) : (\r\n            <h1 className=\"noComments\">Be the first to comment!</h1>\r\n          )}\r\n        </div>\r\n        <Alert />\r\n      </>\r\n    );\r\n  }\r\n};\r\n","import { Link, useNavigate } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useEffect, useState } from 'react';\r\nimport Header from './header';\r\n\r\nexport const SignIn = () => {\r\n  // error texts for signin\r\n  const userErrors = {\r\n    required: 'Username is required to login',\r\n    minLength: 'Username must be at least 3 characters long',\r\n    maxLength: 'Username must be 10 characters long maximum',\r\n    'No user found!': 'No user found with that username',\r\n    err: 'Error trying to login, please try again later',\r\n  };\r\n  const passErrors = {\r\n    required: 'Password is required to login',\r\n    minLength: 'Password must be at least 6 characters long',\r\n    maxLength: 'Password must be 24 characters long maximum',\r\n    'Incorrect password!': 'Incorrect password',\r\n    err: 'Error trying to login, please try again later',\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [userError, setUserError] = useState(null);\r\n  const [passError, setPassError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    document.title = 'Login - Denton Forums';\r\n    if (localStorage.getItem('name')) {\r\n      navigate('/');\r\n    }\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    setUserError(null);\r\n    setPassError(null);\r\n    const loginInfo = {\r\n      username: data.username.toLowerCase(),\r\n      pwd: data.password,\r\n    };\r\n\r\n    const options = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(loginInfo),\r\n    };\r\n    const res = await fetch('/be/userLogin', options).then((response) =>\r\n      response.json()\r\n    );\r\n\r\n    if (res.succ) {\r\n      localStorage.setItem('name', res.succ);\r\n\r\n      navigate('/');\r\n    } else {\r\n      if (res.err === 'No user found!') {\r\n        setUserError('No user found!');\r\n      } else if (res.err === 'Incorrect password!') {\r\n        setPassError('Incorrect password!');\r\n      } else {\r\n        setPassError('err');\r\n        setUserError('err');\r\n      }\r\n    }\r\n  };\r\n\r\n  const onErrors = (errors) => {\r\n    setUserError(errors.username ? errors.username.type : null);\r\n    setPassError(errors.password ? errors.password.type : null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"centerScreen\">\r\n      <Header login={true} />\r\n      <div className=\"loginContainer\">\r\n        <h2 className=\"formTitle\">Login</h2>\r\n        <form onSubmit={handleSubmit(onSubmit, onErrors)}>\r\n          <div className=\"formGroup\">\r\n            <input\r\n              id=\"username\"\r\n              className=\"formField\"\r\n              autoFocus={true}\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              aria-invalid={errors.username ? 'true' : 'false'}\r\n              {...register('username', {\r\n                required: true,\r\n                minLength: 3,\r\n                maxLength: 30,\r\n              })}\r\n            />\r\n            <label className=\"formLabel\" htmlFor=\"username\">\r\n              Username\r\n            </label>\r\n          </div>\r\n\r\n          {userError && (\r\n            <span role=\"alert\" className=\"fieldError\">\r\n              {userErrors[userError]}\r\n            </span>\r\n          )}\r\n\r\n          <div className=\"formGroup\">\r\n            <input\r\n              id=\"password\"\r\n              className=\"formField\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              aria-invalid={errors.password ? 'true' : 'false'}\r\n              {...register('password', {\r\n                required: true,\r\n                minLength: 6,\r\n                maxLength: 24,\r\n              })}\r\n            />\r\n            <label className=\"formLabel\" htmlFor=\"password\">\r\n              Password\r\n            </label>\r\n          </div>\r\n\r\n          {passError && (\r\n            <span role=\"alert\" className=\"fieldError\">\r\n              {passErrors[passError]}\r\n            </span>\r\n          )}\r\n\r\n          <div className=\"login\">\r\n            <button type=\"submit\" className=\"btn\">\r\n              <svg\r\n                width=\"180px\"\r\n                height=\"60px\"\r\n                viewBox=\"0 0 180 60\"\r\n                className=\"border\"\r\n              >\r\n                <polyline\r\n                  points=\"179,1 179,59 1,59 1,1 179,1\"\r\n                  className=\"bg-line\"\r\n                />\r\n                <polyline\r\n                  points=\"179,1 179,59 1,59 1,1 179,1\"\r\n                  className=\"hl-line\"\r\n                />\r\n              </svg>\r\n              <span>Login</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n\r\n        <div className=\"swapLogin\">\r\n          <p>\r\n            Don't have an account? <Link to=\"/register\">Sign up here!</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const SignUp = () => {\r\n  // error texts\r\n  const userErrors = {\r\n    required: 'Username is required to register',\r\n    minLength: 'Username must be at least 3 characters long',\r\n    maxLength: 'Username must be 10 characters long maximum',\r\n    pattern: 'Username must contain only letters and numbers',\r\n    username: 'Username is already taken',\r\n    err: 'Error trying to register, please try again later',\r\n  };\r\n  const emailErrors = {\r\n    required: 'Email is required to register',\r\n    maxLength: 'Email must be 30 characters long maximum',\r\n    pattern: 'Email must be in the correct format',\r\n    email: 'An account with this email already exists',\r\n    err: 'Error trying to register, please try again later',\r\n  };\r\n  const passErrors = {\r\n    required: 'Password is required to register',\r\n    minLength: 'Password must be at least 6 characters long',\r\n    maxLength: 'Password must be 24 characters long maximum',\r\n    err: 'Error trying to register, please try again later',\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const [userError, setUserError] = useState(null);\r\n  const [emailError, setEmailError] = useState(null);\r\n  const [passError, setPassError] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    document.title = 'Register - Denton Forums';\r\n    if (localStorage.getItem('name')) {\r\n      navigate('/');\r\n    }\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    setUserError(null);\r\n    setEmailError(null);\r\n    setPassError(null);\r\n\r\n    const loginInfo = {\r\n      name: data.username,\r\n      email: data.email.toLowerCase(),\r\n      pwd: data.password,\r\n    };\r\n\r\n    const options = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(loginInfo),\r\n    };\r\n    const res = await fetch('/be/createAccount', options).then((response) =>\r\n      response.json()\r\n    );\r\n\r\n    if (res.succ) {\r\n      localStorage.setItem('name', res.succ);\r\n      navigate('/');\r\n    } else {\r\n      if (res.err === 'Username and email taken') {\r\n        setUserError('username');\r\n        setEmailError('email');\r\n      } else if (res.err === 'Username taken') {\r\n        setUserError('username');\r\n      } else if (res.err === 'Email taken') {\r\n        setEmailError('email');\r\n      } else {\r\n        setPassError('err');\r\n        setEmailError('err');\r\n        setUserError('err');\r\n      }\r\n    }\r\n  };\r\n\r\n  const onErrors = (errors) => {\r\n    setUserError(errors.username ? errors.username.type : null);\r\n    setEmailError(errors.email ? errors.email.type : null);\r\n    setPassError(errors.password ? errors.password.type : null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"centerScreen\">\r\n      <Header login={true} />\r\n      <div className=\"loginContainer\">\r\n        <h2 className=\"formTitle\">Create An Account</h2>\r\n        <form onSubmit={handleSubmit(onSubmit, onErrors)}>\r\n          <div className=\"formGroup\">\r\n            <input\r\n              id=\"username\"\r\n              className=\"formField\"\r\n              autoFocus={true}\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              aria-invalid={errors.username ? 'true' : 'false'}\r\n              {...register('username', {\r\n                required: true,\r\n                minLength: 3,\r\n                maxLength: 10,\r\n                pattern: /^[a-z0-9]+$/i,\r\n              })}\r\n            />\r\n            <label className=\"formLabel\" htmlFor=\"username\">\r\n              Username\r\n            </label>\r\n          </div>\r\n\r\n          {userError && (\r\n            <span role=\"alert\" className=\"fieldError\">\r\n              {userErrors[userError]}\r\n            </span>\r\n          )}\r\n\r\n          <div className=\"formGroup\">\r\n            <input\r\n              id=\"email\"\r\n              className=\"formField\"\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              aria-invalid={errors.email ? 'true' : 'false'}\r\n              {...register('email', {\r\n                required: true,\r\n                maxLength: 30,\r\n                pattern: /\\S+@\\S+\\.\\S+/,\r\n              })}\r\n            />\r\n            <label className=\"formLabel\" htmlFor=\"email\">\r\n              Email\r\n            </label>\r\n          </div>\r\n\r\n          {emailError && (\r\n            <span role=\"alert\" className=\"fieldError\">\r\n              {emailErrors[emailError]}\r\n            </span>\r\n          )}\r\n\r\n          <div className=\"formGroup\">\r\n            <input\r\n              id=\"password\"\r\n              className=\"formField\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              aria-invalid={errors.password ? 'true' : 'false'}\r\n              {...register('password', {\r\n                required: true,\r\n                minLength: 6,\r\n                maxLength: 24,\r\n              })}\r\n            />\r\n            <label className=\"formLabel\" htmlFor=\"password\">\r\n              Password\r\n            </label>\r\n          </div>\r\n\r\n          {passError && (\r\n            <span role=\"alert\" className=\"fieldError\">\r\n              {passErrors[passError]}\r\n            </span>\r\n          )}\r\n\r\n          <div className=\"register\">\r\n            <button type=\"submit\" className=\"btn\">\r\n              <svg\r\n                width=\"180px\"\r\n                height=\"60px\"\r\n                viewBox=\"0 0 180 60\"\r\n                className=\"border\"\r\n              >\r\n                <polyline\r\n                  points=\"179,1 179,59 1,59 1,1 179,1\"\r\n                  className=\"bg-line\"\r\n                />\r\n                <polyline\r\n                  points=\"179,1 179,59 1,59 1,1 179,1\"\r\n                  className=\"hl-line\"\r\n                />\r\n              </svg>\r\n              <span>Register</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n\r\n        <div className=\"swapLogin\">\r\n          <p>\r\n            Already have an account? <Link to=\"/login\">Sign in here!</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useNavigate } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useEffect, useState } from 'react';\r\nimport Header from './header';\r\n\r\nexport const NewPost = () => {\r\n  const titleErrors = {\r\n    required: 'A title is required to make a post',\r\n    minLength: 'Title must be at least 5 characters long',\r\n    maxLength: 'Title must be 80 characters long maximum',\r\n    err: 'Error trying to post, please try again later',\r\n  };\r\n  const bodyErrors = {\r\n    required: 'Post body is required to make a post',\r\n    minLength: 'Post body must be at least 3 characters long',\r\n    maxLength: 'Post body must be 501 characters long maximum',\r\n    err: 'Error trying to post, please try again later',\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const [titleError, setTitleError] = useState(null);\r\n  const [bodyError, setBodyError] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    document.title = 'New Post - Denton Forums';\r\n    if (!localStorage.getItem('name')) {\r\n      navigate('/');\r\n    }\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    setTitleError(null);\r\n    setBodyError(null);\r\n    const user = localStorage.getItem('name');\r\n\r\n    const postInfo = {\r\n      author: user,\r\n      title: data.title,\r\n      body: data.body,\r\n    };\r\n\r\n    const options = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(postInfo),\r\n    };\r\n    const res = await fetch('/be/newPost', options).then((response) =>\r\n      response.json()\r\n    );\r\n\r\n    if (res.succ) {\r\n      navigate(`/${res.succ._id}`);\r\n    } else {\r\n      setTitleError('err');\r\n      setBodyError('err');\r\n    }\r\n  };\r\n\r\n  const handleInput = ({ target }) => {\r\n    target.style.height = '';\r\n    target.style.height = target.scrollHeight + 6 + 'px';\r\n  };\r\n\r\n  const onErrors = (errors) => {\r\n    setTitleError(errors.title ? errors.title.type : null);\r\n    setBodyError(errors.body ? errors.body.type : null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"centerScreen\">\r\n      <Header />\r\n      <div className=\"loginContainer\">\r\n        <h2 className=\"formTitle\">Make a Post</h2>\r\n        <form onSubmit={handleSubmit(onSubmit, onErrors)}>\r\n          <div className=\"formGroup\">\r\n            <input\r\n              id=\"title\"\r\n              className=\"formField\"\r\n              type=\"text\"\r\n              placeholder=\"Title\"\r\n              aria-invalid={errors.title ? 'true' : 'false'}\r\n              {...register('title', {\r\n                required: true,\r\n                minLength: 5,\r\n                maxLength: 80,\r\n              })}\r\n            />\r\n            <label className=\"formLabel\" htmlFor=\"title\">\r\n              Title\r\n            </label>\r\n          </div>\r\n\r\n          {titleError && (\r\n            <span role=\"alert\" className=\"fieldError\">\r\n              {titleErrors[titleError]}\r\n            </span>\r\n          )}\r\n\r\n          <div className=\"formGroup textField\">\r\n            <textarea\r\n              id=\"body\"\r\n              className=\"formField textField\"\r\n              type=\"text\"\r\n              placeholder=\"Body\"\r\n              maxLength=\"500\"\r\n              aria-invalid={errors.body ? 'true' : 'false'}\r\n              onInput={handleInput}\r\n              {...register('body', {\r\n                required: true,\r\n                minLength: 3,\r\n                maxLength: 500,\r\n              })}\r\n            />\r\n            <label className=\"formLabel textField\" htmlFor=\"body\">\r\n              Body\r\n            </label>\r\n          </div>\r\n\r\n          {bodyError && (\r\n            <span role=\"alert\" className=\"fieldError\">\r\n              {bodyErrors[bodyError]}\r\n            </span>\r\n          )}\r\n\r\n          <div className=\"newPost\">\r\n            <button type=\"submit\" className=\"btn\">\r\n              <svg\r\n                width=\"180px\"\r\n                height=\"60px\"\r\n                viewBox=\"0 0 180 60\"\r\n                className=\"border\"\r\n              >\r\n                <polyline\r\n                  points=\"179,1 179,59 1,59 1,1 179,1\"\r\n                  className=\"bg-line\"\r\n                />\r\n                <polyline\r\n                  points=\"179,1 179,59 1,59 1,1 179,1\"\r\n                  className=\"hl-line\"\r\n                />\r\n              </svg>\r\n              <span>Post</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from './header';\r\n\r\nconst NotFound = () => {\r\n  useEffect(() => {\r\n    document.title = 'Oops! - Denton Forums';\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"errorNotFound\">\r\n        <h1>404</h1>\r\n        <p>Sorry, we couldn't find that page!</p>\r\n        <Link to=\"/\">Return Home</Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import './App.css';\nimport { Route, Routes } from 'react-router-dom';\nimport { Feed } from './Posts';\nimport { Post } from './Post';\nimport { SignIn, SignUp } from './Login';\nimport { NewPost } from './NewPost';\nimport NotFound from './NotFound';\n\nconst App = () => {\n  return (\n    <>\n      <Routes>\n        <Route path=\"/\" element={<Feed />} />\n        <Route path=\"/post/:id\" element={<Post />} />\n        <Route path=\"/newpost\" element={<NewPost />} />\n        <Route path=\"/login\" element={<SignIn />} />\n        <Route path=\"/register\" element={<SignUp />} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}